import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter demo',
      theme: ThemeData(
        primarySwatch: Colors.lightGreen,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: MyHomePage(title: '目覚まし'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {


  //List<String> _time = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"];
  //List<String> _minute = ["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"];
  //String  _selectedyear = "00";
  //String _selectedminitue = "00";


  String setTime = '00:00';

  TimeOfDay _time = new TimeOfDay.now();

  Future<Null> _selectTime(BuildContext context) async {
    final TimeOfDay picked = await showTimePicker(
      context: context,
      initialTime: _time,
    );
    if (picked != null) {
      var dt = _toDateTime(picked);
      setState(() {
        _time = (DateFormat.Hm()).format("dt");
      });
    }
  }
    _toDateTime(TimeOfDay t) {
        var now = DateTime.now();
        return DateTime(
            t.hour, t.minute);
      }

      bool _active = false;//スイッチの値
      String switch_text= "設定していません.";//スイッチだけではわかりにくいため文字を表示

      @override
      Widget build(BuildContext context) {
        // This method is rerun every time setState is called, for instance as done
        // by the _incrementCounter method above.
        //
        // The Flutter framework has been optimized to make rerunning build methods
        // fast, so that you can just rebuild anything that needs updating rather
        // than having to individually change instances of widgets.
        return Scaffold(
          appBar: AppBar(
            // Here we take the value from the MyHomePage object that was created by
            // the App.build method, and use it to set our appbar title.
            title: Text(widget.title),
          ),
          body: Center(
            // Center is a layout widget. It takes a single child and positions it
            // in the middle of the parent.
            child: Column(

              mainAxisAlignment: MainAxisAlignment.start,
              children: <Widget>[
                Text(
                  "時間を設定してください.",
                  style: TextStyle(
                    fontSize: 25.0,
                  ),
                ),

                Container(
                  height: 58,
                  width: 400,
                  color: Colors.grey,
                  margin:EdgeInsets.all(10.0),
                  child: Row(
                      children: <Widget>[
                        /*
                Text(
                    _setTime,
                    textAlign: TextAlign.center,
                    style: TextStyle(
                    fontSize: 36.0,
                    ),
                ),
                   */

                        new RaisedButton(
                      //    onPressed: () => _selectTime(context),
                          child: new Text("${_time}",
                            style: TextStyle(
                              fontSize: 25.0,
                            ),
                          ),
                        ),
                        /*
              new TextField(
                enabled: true,
                maxLength: 5,
                maxLengthEnforced: false,
                style: TextStyle(color: Colors.black),
                maxLines: 1,
                onChanged: _handleText,
              ),
              */
                        new Switch(
                          value: _active,
                          activeColor: Colors.black,
                          activeTrackColor: Colors.black,
                          inactiveThumbColor: Colors.white,
                          inactiveTrackColor: Colors.white,
                          onChanged: (bool value) {
                            setState(() {
                              _active = value;
                              if(_active == true) {
                                switch_text = '設定しました';
                              }
                              else {
                                switch_text = '設定されていません';
                              }
                            });
                          },
                        ),
                        Text(switch_text)

                      ]
                  ),
                ),


                IconButton(
                  icon: Icon(Icons.add_circle),
                ),
              ],
            ),
          ),
          /*floatingActionButton: FloatingActionButton(
        tooltip: 'Increment',
        child: Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    */
        );
      }
}
