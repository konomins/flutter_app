import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

void main() {
  runApp(MyApp());
}

//静的
class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter demo',
      theme: ThemeData(
        primarySwatch: Colors.lightGreen,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: MyHomePage(title: '目覚まし'),
    );
  }
}

//動的
class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  //時間を設定
  String set_time1 = '00:00';

  TimeOfDay _time = new TimeOfDay.now();

  //時間を設定する関数
  Future<Null> _selectTime(BuildContext context) async {
    final TimeOfDay picked = await showTimePicker(
      context: context,
      initialTime: _time,
    );
    if (picked != null) {
      var dt = _toDateTime(picked);
      setState(() {
          set_time1 = (DateFormat.Hm()).format(dt);
      });
    }
  }

  //TimeOfDay型をString型に変換する関数
  _toDateTime(TimeOfDay t) {
    var now = DateTime.now();//年、月、日のみ使用
    return DateTime(
      now.year,now.month,now.day,
        t.hour, t.minute);
  }

  bool _active = false;//スイッチの値
  String switch_text= "設定していません.";//スイッチの状態を表示

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(

          mainAxisAlignment: MainAxisAlignment.start,
          children: <Widget>[
            Text(
              "時間を設定してください.",
              style: TextStyle(
                fontSize: 25.0,
              ),
            ),

            Container(
              height: 58,
              width: 400,
              color: Colors.grey,
              margin:EdgeInsets.all(10.0),
              child: Row(
                  children: <Widget>[
                    new RaisedButton(
                          onPressed: () => _selectTime(context),
                      child: new Text(set_time1,
                        style: TextStyle(
                          fontSize: 25.0,
                        ),
                      ),
                    ),

                    new Switch(
                      value: _active,
                      activeColor: Colors.black,
                      activeTrackColor: Colors.black,
                      inactiveThumbColor: Colors.white,
                      inactiveTrackColor: Colors.white,
                      onChanged: (bool value) {
                        setState(() {
                          _active = value;
                          if(_active == true) {
                            switch_text = '設定しました';
                          }
                          else {
                            switch_text = '設定されていません';
                          }
                        });
                      },
                    ),
                    Text(switch_text),
          ],
        ),
      ),
      /*floatingActionButton: FloatingActionButton(
        tooltip: 'Increment',
        child: Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.

    */
      ]
        ),
      ),
    );
  }
}